По сути говоря - модель это достаточно долгая тренировка этой хуйни
на огромном количестве даты и постоянное обновление этой самой даты для того
чтобы оно всё нормально работало. Постоянный процесс сбора, обработки данных
обучения модели, её подключения, наблюдения за этой штукой, редакции
кода, пересобрания данных, перекодирования модели и т.д. и т.п.

//Все таки мне нравится идея с тем, чтобы собрать MLO для сталкрафта. И
посмотреть какие приколы оно будет делать

В большинстве модели по сути являются дата цетричными и моделе центричными
Моделе цент имеют одинаковую дату и фокусируются на улучшении модели
Дата центричные сфокусированны на улучшении именно даты.

Первое необходимо понять
"Какую проблему решает MLO" Что делает
А если точнее - какую БИЗНЕСС проблему решает машина.
Ибо есть такая штука, что если модель выдаст неверное предсказание - пизда
Ибо бизнессу это будет стоить нормально. (Но, рано или поздно это прои-
зойдёт, рано или поздно программист принесёт кампании своей криворукость
ю нормально так убытков)

Находим проблему и делим её на проблемы, что нужно решить.
Т.е.:
Причина построения бота(Нахождения наиболее прибыльных маршрутов фарма)
Боту для СК нужно
Алгоритм по расхуяриванию игроков
Алгоритм по исследованию мира
Алгоритм выполнения квестов
Алгоритм по обновлению своей карты
Алгоритм по взаимодействию с выбросом
Алгоритм по поиску артефактов
Алгоритм взаимодействия с игроками и НПС.
Алгоритм рассчитывания пути.
Алгоритм расчитывания времени
Алгоритм по фарму.
Дерево решений
Pathfinding runtime
Приколы с зонами заражения
Медикаменты.
Алгоритм по обработке данных после всего выше перечисленного, дабы
обновлять модель и повышать свою эффективность

(Можно сделать аукционного бота(Ы))
И многое другое

Machine Learning Canvas
Специально для таких глупеньких как я уже существует канвас с машинными приколами
Value proposition
Мы определяем проблему для кого-то
Предлагаем решения и ценность, что она принесёт её новому владельцу.
Data sources
Источники даты, которую мы будем вытягивать(Апи, ДБ, Датасеты)
Примерно пытаемся понять скрытые траты
Prediction task
Задачу машинного обучения. Что она будет делать. Будет ли она направляться
создателем.
Задумайся о том, как всё будет вводиться и выводиться. Сложность модели.
Feature Engineering
Вытягиваем приколы из полученной даты.
Offline Evaluation
Хуяривание метрик, чтобы они отмеряли эффективность рабоыт этой хуйни
ещё до деплоя.
Понимание влияния ошибок предсказания.
Decisions
Использование предсказаний чтобы делать решения. Как юзер будет взаи
модействовать с нашими предсказаниями.
Возможные неустойки, что так-же ещё и включают вмешательство человека.
Collecting data
Сбор новых данных для модели и пересбор моделей и а так-же preventing
model decay(Модель попросту перестаёт нормально выполнять поставленные
задачи и результат начинает варьироваться)
Примерная цена для сбора данных и роль человека в Data labeling
Building Models
Решаем насколько часто будет модель retraining и возможные траты на это
Планирование изменений и tech stack and scailing
Live Evaluation & monitoring
Установка метрик для отслеживаня эффективности после деплоя
Понимания кореляции между метрик модели и бизнес метрик

//Бля, а ведь можно модель сделать для торговли акциями. И это...
//Теперь у каждого брокера, иначе никак - шо поделать.

Ну и конечно - следует понимать, когда следует внедрять ИИ, а когда
не нужно.

Workflow
Артифакты - Дата. ML model, Code
Фазы -  Дата иженерия(обработка данных, с приведением в нормальную форму)
ML model engineering(разработка модели), Code engineering(Написание кода)

Data
Получаем дату и подгатавливаем дату
Самая затратная и время поглощаюшая фаза
Превентирует пиздец следующих фаз, но следует убеждаться в том, что
дата корректная перед переходом на следующий этап

Data Engineering Pipeline
Data Ingestion Сбор данных из разных ресурсов
Exploration and Validation Понимание структуры данных и её содержимое
Data Wrangling Форматирование и очистка данных
Data Labeling Assigning категории к очкам данных
Data Splitting Разделение даты для тренировки, валидации и тестировочных датасетов

Model Engineering
Ядро этой штуки - написание и исполнение ML алгоритмов
Получение модели ML

Model Engin. Pipeline
Model Training Применение ML алгоритмов на тренировочную дату
Model Evaluation  Ферификация модели перед деплоем
Model Testing Последний тест, что использует тестировочный датасет
Model Packaging Исследование модели в consumable формат для бизнеса api

Model Deploy
Model serving - Addressing the ml model in production evironment
Model perfom mon observing performance on live unseen data
Model perfom log recording every inference request

По сути говоря сначала ты делаешь структуру машины и того, что она должна делать
после чего ты начинаешь склеивать всю хуйню, в попытках заставить это
работать